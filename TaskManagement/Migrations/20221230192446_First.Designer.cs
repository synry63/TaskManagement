// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace TaskManagement.Migrations
{
    [DbContext(typeof(TaskManagementContext))]
    [Migration("20221230192446_First")]
    partial class First
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TaskManagement.Models.Material", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<int>("ManufacturerCode")
                        .HasColumnType("int");

                    b.Property<string>("Partnumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<long>("UnitOfIssueId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UnitOfIssueId");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            Id = new Guid("49f9d456-7be0-4791-b623-b634a404cdf0"),
                            ManufacturerCode = 48,
                            Partnumber = "AX778",
                            Price = 78,
                            UnitOfIssueId = 1L
                        },
                        new
                        {
                            Id = new Guid("464c51a1-e342-4271-b122-b8c516c7dd65"),
                            ManufacturerCode = 778,
                            Partnumber = "LX777",
                            Price = 108,
                            UnitOfIssueId = 2L
                        },
                        new
                        {
                            Id = new Guid("dfc27adf-dd5f-4ebc-ab14-d9aebe482c77"),
                            ManufacturerCode = 66549,
                            Partnumber = "PO846",
                            Price = 999,
                            UnitOfIssueId = 3L
                        });
                });

            modelBuilder.Entity("TaskManagement.Models.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<int>("Description")
                        .HasColumnType("int");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalDuration")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("862667cc-d2d4-4a4b-84d5-4ea0282511d0"),
                            Description = 66,
                            MaterialId = new Guid("49f9d456-7be0-4791-b623-b634a404cdf0"),
                            Name = "Reparation FTX",
                            TotalDuration = 60
                        },
                        new
                        {
                            Id = new Guid("561ce88a-5ce6-4a04-9842-ee41bf28fdac"),
                            Description = 777,
                            MaterialId = new Guid("464c51a1-e342-4271-b122-b8c516c7dd65"),
                            Name = "Filtrage TAX",
                            TotalDuration = 30
                        },
                        new
                        {
                            Id = new Guid("98829086-241d-448a-9394-19f1d47831bd"),
                            Description = 63549,
                            MaterialId = new Guid("dfc27adf-dd5f-4ebc-ab14-d9aebe482c77"),
                            Name = "Assemblage FII",
                            TotalDuration = 10
                        });
                });

            modelBuilder.Entity("TaskManagement.Models.TaskMaterialUsage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("UnitOfMeasurementId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("TaskId");

                    b.HasIndex("UnitOfMeasurementId");

                    b.ToTable("TaskMaterialUsage");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bdc565a0-4ee5-4e06-b24c-84ad0551caaf"),
                            Amount = 100,
                            MaterialId = new Guid("49f9d456-7be0-4791-b623-b634a404cdf0"),
                            TaskId = new Guid("862667cc-d2d4-4a4b-84d5-4ea0282511d0"),
                            UnitOfMeasurementId = 3L
                        },
                        new
                        {
                            Id = new Guid("e08fe392-2a93-43c3-a0e3-df186768091f"),
                            Amount = 30,
                            MaterialId = new Guid("464c51a1-e342-4271-b122-b8c516c7dd65"),
                            TaskId = new Guid("561ce88a-5ce6-4a04-9842-ee41bf28fdac"),
                            UnitOfMeasurementId = 4L
                        },
                        new
                        {
                            Id = new Guid("50a3ba32-b14e-44e8-beb6-97d6d52b5334"),
                            Amount = 5000,
                            MaterialId = new Guid("dfc27adf-dd5f-4ebc-ab14-d9aebe482c77"),
                            TaskId = new Guid("98829086-241d-448a-9394-19f1d47831bd"),
                            UnitOfMeasurementId = 1L
                        });
                });

            modelBuilder.Entity("TaskManagement.Models.UnitMeasure", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UnitMeasure");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "liters",
                            Sort = 1
                        },
                        new
                        {
                            Id = 2L,
                            Name = "meters",
                            Sort = 2
                        },
                        new
                        {
                            Id = 3L,
                            Name = "milliliters",
                            Sort = 3
                        },
                        new
                        {
                            Id = 4L,
                            Name = "centimeters",
                            Sort = 4
                        });
                });

            modelBuilder.Entity("TaskManagement.Models.Material", b =>
                {
                    b.HasOne("TaskManagement.Models.UnitMeasure", "UnitOfIssue")
                        .WithMany()
                        .HasForeignKey("UnitOfIssueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UnitOfIssue");
                });

            modelBuilder.Entity("TaskManagement.Models.Task", b =>
                {
                    b.HasOne("TaskManagement.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("TaskManagement.Models.TaskMaterialUsage", b =>
                {
                    b.HasOne("TaskManagement.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TaskManagement.Models.Task", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TaskManagement.Models.UnitMeasure", "UnitOfMeasurement")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasurementId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Task");

                    b.Navigation("UnitOfMeasurement");
                });
#pragma warning restore 612, 618
        }
    }
}
